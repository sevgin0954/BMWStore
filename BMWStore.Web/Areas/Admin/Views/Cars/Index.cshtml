@model AdminCarsViewModel
@{
    ViewData["Title"] = "Cars";
}

<div class="container-item-white border-radius-smooth border-grey d-flex">
    <a class="btn border-blue-hover"
       asp-controller="Cars"
       asp-action="AddNew">
        Add new
        <i class="fas fa-plus"></i>
    </a>
    <div class="d-flex mx-auto">
        @await Component.InvokeAsync("Dropdown", new
         {
             enumTypeName = typeof(AdminBaseCarSortStrategyType).AssemblyQualifiedName,
             selectedEnumName = @Model.SortStrategyType.ToString(),
             controllerName = "Cars",
             actionName = "ChangeSortType",
             routeParamName = "sortStrategyType",
             prependText = "Order by"
         })
        @await Component.InvokeAsync("Dropdown", new
        {
            enumTypeName = typeof(SortStrategyDirection).AssemblyQualifiedName,
            selectedEnumName = @Model.SortStrategyDirection.ToString(),
            controllerName = "Cars",
            actionName = "ChangeSortDirection",
            routeParamName = "sortDirection"
        })
    </div>
</div>

@foreach (var car in Model.Cars)
{
    <div data-carId="@car.Id" class="container-item-white border-radius-smooth border-grey">
        <partial name="_CarConcisePartial" model="@car" />

        <div class="row d-flex">
            <div class="mx-auto">
                <button delete data-carId="@car.Id" class="btn border-light-red background-light-red-hover">Delete</button>
                <a class="btn border-green background-green-hover ml-2"
                   asp-route-id="@car.Id"
                   asp-area="Admin"
                   asp-controller="Cars"
                   asp-action="Edit">
                    Edit
                </a>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/js/removeElementOnButtonClick.js"></script>
    <script>
        $(function () {
            removeElementOnButtonClick('[delete]', 'data-carId', '/Admin/Cars/Delete');
        })
    </script>
}